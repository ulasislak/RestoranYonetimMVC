@using Microsoft.AspNetCore.Identity
@using RestoranMenüSiparisMVC.Areas.Identity.Data

@inject SignInManager<RestoranMenüSiparisMVCUser> SignInManager
@inject UserManager<RestoranMenüSiparisMVCUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        if (await UserManager.IsInRoleAsync(user, "Admin"))
        {
            <li class="nav-item">
                <a class="nav-link btn-custom-red" asp-area="Admin" asp-controller="Admin" asp-action="CreateMenu">Admin Dashboard</a>
            </li>
        }
        else if (await UserManager.IsInRoleAsync(user, "Costumer"))
        {
            <li class="nav-item">
                <a class="nav-link btn-custom-orange" asp-area="Costumer" asp-controller="Costumer" asp-action="ListMenu">Menu</a>
            </li>
        }

        <li class="nav-item">
            <a id="manage" class="nav-link btn-custom-red" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link btn-custom-orange border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link btn-custom-red" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link btn-custom-orange" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>